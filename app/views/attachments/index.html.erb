<div class="container">
  <h2>Upload file</h2>


  <%= simple_form_for :options do |f| %>
    <% if current_user.has_role? :admin %>
      <%= f.input :chapter_for_uploads, :collection => @chapters, :required => false, :include_blank => true, :class=> "col-md-4", :selected => params[:chapter_id], as: :group, group_method: :state %>
    <% else %>
      <%= f.input :chapter_for_uploads, :collection => @chapters, :required => false, :class=> "col-md-4", :selected => params[:chapter_id] %>
    <% end %>
  <% end %>

  <%= simple_form_for :attachment, :html => { :multipart => true, :id => "fileupload", :class => "form-horizontal"  } do |f| %>

    <%= f.input :chapter_id, as: :hidden %>
    <%= f.input :user_id, as: :hidden, :input_html => { :value => current_user.id} %>
    <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
    <div class="row fileupload-buttonbar">
      <div class="col-md-7">
        <!-- The fileinput-button span is used to style the file input field as button -->
        <span class="btn btn-success fileinput-button" id="add_file_btn">
          <i class="icon-plus icon-white"></i>
          <span>Add files...</span>
          <%= f.file_field :attachment %>
        </span>
        <button type="submit" class="btn btn-primary start" style="display:none;">
          <i class="icon-upload icon-white"></i>
          <span>Start upload</span>
        </button>
        <button type="reset" class="btn btn-warning cancel" style="display:none;">
          <i class="icon-ban-circle icon-white"></i>
          <span>Cancel upload</span>
        </button>
        <button type="button" class="btn btn-danger delete">
          <i class="glyphicon glyphicon-trash glyphicon-trash-white"></i>
          <span>Delete</span>
        </button>
        <input type="checkbox" class="toggle">
      </div>
      <div class="col-md-5">
      </div>
    </div>
    <!-- The loading indicator is shown during image processing -->
    <div class="fileupload-loading"></div>
    <br>
    <!-- The table listing the files available for upload/download -->
    <h3>Chapter Files</h3>
    <%= will_paginate @attachments, renderer: BootstrapPagination::Rails %>

    <table class="table table-striped attachment-ajax"><tbody class="files" data-toggle="modal-gallery" data-target="#modal-gallery"></tbody>
    </table>
  <% end %>

</div>
<script>
  var fileUploadErrors = {
  maxFileSize: 'File is too big',
  minFileSize: 'File is too small',
  acceptFileTypes: 'Filetype not allowed',
  maxNumberOfFiles: 'Max number of files exceeded',
  uploadedBytes: 'Uploaded bytes exceed file size',
  emptyResult: 'Empty file upload result'
  };
</script>

<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
  {% for (var i=0, file; file=o.files[i]; i++) { %}
  <tr class="template-upload fade">
    <td class="preview"><span class="fade">
    </span>
    </td>
    <td class="progress" colspan="9">
      <div class="progress progress-striped">
        <div class="progress-bar bar progress-bar-info" role="progressbar"></div>
      </div>
    </td>
    <td class="name"><span>{%=file.name%}</span></td>
    <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
    {% if (file.error) { %}
    <td class="error" colspan="3"><span class="label label-important">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</td>
    {% } else if (o.files.valid && !i) { %}
    <td>
      &nbsp;
    </td>
    <td class="start">{% if (!o.options.autoUpload) { %}
      <button class="btn btn-primary">
        <i class="icon-upload icon-white"></i>
        <span>{%=locale.fileupload.start%}</span>
      </button>
      {% } %}</td>
    {% } else { %}
    <td colspan="2"></td>
    {% } %}
    <td class="cancel">{% if (!i) { %}
      <button class="btn btn-warning">
        <i class="icon-ban-circle icon-white"></i>
        <span>{%=locale.fileupload.cancel%}</span>
      </button>
      {% } %}</td>
  </tr>
  {% } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
  {% for (var i=0, file; file=o.files[i]; i++) { %}
    {% if (!file.error) { %}
    <input type="hidden" value="{%=file.id%}" name="id" data-id="{%=file.id%}"/>
    <tr class="template-download fade" data-id="{%=file.id%}">
        <td class="error" colspan="7"><span class="label label-important" style="display:none;">{%=locale.fileupload.error%}</span> {%=locale.fileupload.errors[file.error] || file.error%}</td>
        <td class="preview">{% if (file.thumbnail_url) { %}
          <a href="{%=file.url%}" title="{%=file.name%}" rel="gallery" download="{%=file.name%}"><img src="{%=file.thumbnail_url%}"></a>
          {% } %}</td>
        <td class="chapter"><span><select name="chapter_id" data-id="{%=file.id%}" value="{%=file.chapter_id%}"><option value="{%=file.chapter_id%}">{%=file.chapter%}</option><%= chapters_for_upload_select %></select></span></td>
        <td class="tag"><select name="tag" data-id="{%=file.id%}" value="{%=file.tag%}"><option value="">Choose a tag...</option><%= options_for_select(Attachment.tags) %> </select></td>
        <td class="name">
          <a href="{%=file.url%}" title="{%=file.name%}" class="name" data-id="{%=file.id%}">{%=file.name%}</a>
          <a class="btn-primary btn btn-xs rename" data-id="{%=file.id%}">          
            <%=glyph("pencil icon-white")%>
          </a>
        </td>
        <td class="size"><span>{%=o.formatFileSize(file.size)%}</span></td>
        <td colspan="2"></td>
      <td class="delete">
        <button class="btn btn-danger btn-xs delete" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}">
          <%=glyph("trash icon-white")%>
          {%=locale.fileupload.destroy%}
        </button>

        <input type="checkbox" name="delete" value="1">

      </td>
    </tr>
    </form>
    {% } %}
    {% } %}
    {% if (o.files.length == 0) { %}

      <tr class="template-download fade" id="no-files-message">
        <td colspan="15">No files stored. Drag some files here (or click "Add Files" to select files to upload).</td>
      </tr>
    {% } %}

</script>

<script type="text/javascript" charset="utf-8">
  function updateAttachmentAjax(e) {
    var id = $(this).attr("data-id");
    var name = $(this).attr("name");
    var value = $(this).val();
    var updateJson = { attachment: {id: id }};
    updateJson["attachment"][name] = value;
    $.ajax({ url: "/attachments/"+id, data: updateJson, dataType: "JSON", type: 'PUT' });

  }

  function setupRename() {
    $('#fileupload').on('click', 'a.rename', function(e) {
      var id = $(this).attr("data-id");
      var old_name = $("a.name[data-id=" + id + "]").html();
      var new_name = prompt("Enter the new name",old_name);
      var updateJson = {"attachment[name]": new_name, "attachment[id]": id};
      if (new_name == "" || new_name == null) {
        return;
      }
      else {
        $.ajax({ url: "/attachments/"+id, data: updateJson, dataType: "JSON", type: 'PUT', success:function(data){
          var id = data.id;
          var file_name = data.attachment_file_name;
          var url = data.url;
          var link = $("a.name[data-id=" + id + "]");
          link.html(file_name);
          link.attr("href",url);
          link.attr("title",file_name);
        }});

      }
    })
    
  }


  function loadSelectValues() {
    //convert value attributes to selections
    //console.log("loading select values from attributes");
    $("select[value]").each(function(i,v) {
      //console.log(v);
      if ($(v).attr("value") < 1)
        $(v).removeAttr("value");
      else
        $(v).val($(v).attr("value")).removeAttr("value");
    });
  }

  function formDataDefault(form) {
    form.serializeArray()
  }

  var originalFn = window.tmpl;

  window.tmpl = (function (originalFn) {
    return function () {
      originalFn.apply(originalFn, arguments); // call the original function
      loadSelectValues();      // other stuff
    };
  })(window.tmpl); // pass the reference of the original function
  function updateAddFileBtnStatus() {
    var sel = $("#options_chapter_for_uploads").val()
    if (sel == "") { //disable add file button if chapter not selected
      $("#add_file_btn, #add_file_btn input").attr("disabled","disabled").prop("disabled","true");
    } else { //enable add button
      $("#add_file_btn, #add_file_btn input").removeAttr("disabled").removeProp("disabled");
    }

  }

  $(function () {
      // Initialize the jQuery File Upload widget:
      $('#fileupload').fileupload({autoUpload: true, destroy: function (e, data) {
        var that = $(this).data('blueimpFileupload');  
        var multiple_selected = (typeof e.originalEvent.originalEvent == "undefined");
        //console.log("test"+multiple_selected);
        if ( multiple_selected || confirm("Are you sure?") == true) {
            if (data.url) {
                $.ajax(data)
                    .success(function () {
                        that._adjustMaxNumberOfFiles(1);
                        $(this).fadeOut(function () {
                            $(this).remove();
                        });
                    });
            } else {
                data.context.fadeOut(function () {
                    $(this).remove();
                });
            }
        }
       }
      });

      var sel = $("#options_chapter_for_uploads option:selected").val();
      $("#attachment_chapter_id").val(sel);
      updateAddFileBtnStatus(); //toggle btn off if blank chapter
      $("#options_chapter_for_uploads").change(function(e) {
        $("#attachment_chapter_id").val($(this).val());
        loadFiles();
        updateAddFileBtnStatus();

      })
      $(".attachment-ajax").delegate("select[name=chapter_id], select[name=tag]", "change", updateAttachmentAjax);
      loadFiles();
      setupRename();

  });


  function loadFiles() {
      //destroy current files
      $('#fileupload .files tr').remove();
      // Load existing files:
      var sel = $("#options_chapter_for_uploads option:selected").val();
      var attachments_url = $('#fileupload').prop('action')+"?chapter_id="+sel;
      $.getJSON(attachments_url, function (files) {
        var fu = $('#fileupload').data('blueimpFileupload'), 
          template;
        fu._adjustMaxNumberOfFiles(-files.length);
        //console.log(files);
        template = fu._renderDownload(files)
          .appendTo($('#fileupload .files'));


          // Force reflow:
          fu._reflow = fu._transition && template.length &&
            template[0].offsetWidth;
          template.addClass('in');
          loadSelectValues();
          $('#loading').remove();
      });

  }

  function uploadTemplateLS(o) {
        var rows = $();
        $.each(o.files, function (index, file) {
            var row = $('<tr class="template-upload fade">' +
                '<td class="preview"><span class="fade"></span></td>' +
                '<td class="name"></td>' +
                '<td class="size"></td>' +
                (file.error ? '<td class="error" colspan="2"></td>' :
                        '<td><div class="progress progress-striped">' +
                            '<div class="progress-bar bar progress-bar-info" role="progressbar" style="width:0%;"></div></div></td>' +
                            '<td class="start"><button>Start</button></td>'
                ) + '<td class="cancel"><button>Cancel</button></td></tr>');
            row.find('.name').text(file.name);
            row.find('.size').text(o.formatFileSize(file.size));
            if (file.error) {
                row.find('.error').text(
                    locale.fileupload.errors[file.error] || file.error
                );
            }
            rows = rows.add(row);
        });
        loadSelectValues();
        return rows;
    }
    function downloadTemplateLS (o) {
        var rows = $();
        $.each(o.files, function (index, file) {
            var row = $('<tr class="template-download fade">' +
                (file.error ? '<td></td><td class="name"></td>' +
                    '<td class="size"></td><td class="error" colspan="2"></td>' :
                        '<td class="preview"></td>' +
                            '<td class="name"><a></a></td>' +
                            '<td class="size"></td><td colspan="2"></td>'
                ) + '<td class="delete"><button>Delete</button> ' +
                    '<input type="checkbox" name="delete" value="1" class="toggle"></td></tr>');
            row.find('.size').text(o.formatFileSize(file.size));
            if (file.error) {
                row.find('.name').text(file.name);
                row.find('.error').text(
                    locale.fileupload.errors[file.error] || file.error
                );
            } else {
                row.find('.name a').text(file.name);
                if (file.thumbnail_url) {
                    row.find('.preview').append('<a><img></a>')
                        .find('img').prop('src', file.thumbnail_url);
                    row.find('a').prop('rel', 'gallery');
                }
                row.find('a').prop('href', file.url);
                row.find('.delete')
                    .attr('data-type', file.delete_type)
                    .attr('data-url', file.delete_url);
            }
            rows = rows.add(row);
        });
        loadSelectValues();
        return rows;
    }
</script>